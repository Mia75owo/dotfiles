require('rust-tools').setup({
  autoSetHints = true,
  hover_with_actions = true,
  executor = require("rust-tools/executors").termopen,
  on_initialized = nil,

  inlay_hints = {
    only_current_line = false,
    only_current_line_autocmp = "CursorHold",
    show_parameter_hints = true,
    show_variable_name = false,
    parameter_hints_prefix = "<- ",
    other_hints_prefix = "=> ",
    max_len_align = false,
    max_len_align_padding = 1,
    right_align = false,
    right_align_padding = 7,
    highlicht = "Comment"
  },
  hover_actions = {
    border = {
      { "╭", "FloatBorder" },
      { "─", "FloatBorder" },
      { "╮", "FloatBorder" },
      { "│", "FloatBorder" },
      { "╯", "FloatBorder" },
      { "─", "FloatBorder" },
      { "╰", "FloatBorder" },
      { "│", "FloatBorder" },
    },
    auto_focus = false,
  },
  crate_graph = {
    backend = "x11",
    output = nil,
    full = true,
    enabled_graphviz_backends = {
      "bmp",
      "cgimage",
      "canon",
      "dot",
      "gv",
      "xdot",
      "xdot1.2",
      "xdot1.4",
      "eps",
      "exr",
      "fig",
      "gd",
      "gd2",
      "gif",
      "gtk",
      "ico",
      "cmap",
      "ismap",
      "imap",
      "cmapx",
      "imap_np",
      "cmapx_np",
      "jpg",
      "jpeg",
      "jpe",
      "jp2",
      "json",
      "json0",
      "dot_json",
      "xdot_json",
      "pdf",
      "pic",
      "pct",
      "pict",
      "plain",
      "plain-ext",
      "png",
      "pov",
      "ps",
      "ps2",
      "psd",
      "sgi",
      "svg",
      "svgz",
      "tga",
      "tiff",
      "tif",
      "tk",
      "vml",
      "vmlz",
      "wbmp",
      "webp",
      "xlib",
      "x11",
    },
  },

  server = require("cfg.lsp.settings").rust_analyzer,

  --dap = {
    --std_source_map = true,
    --adapter = require('rust-tools.dap').get_codelldb_adapter(
      --require('mason-registry').get_package('codelldb'):get_install_path() .. '/codelldb'
      --require('mason-registry').get_package('codelldb'):get_install_path() .. '/extension/lldb/lib/liblldb.so'
    --),
    --configuration = {
      --launch = {
        ----preRunCommands = { "script lldb.debugger.HandleCommand('settings set target.source-map /rustc/{} \"{}/lib/rustlib/src/rust\"'.format(os.popen('rustc --version --verbose').read().split('commit-hash: ')[1].split('\\n')[0].strip(), os.popen('rustc --print sysroot').readline().strip()))" }
        --preRunCommands = { "foobaa" }
      --}
    --},
  --},
})
